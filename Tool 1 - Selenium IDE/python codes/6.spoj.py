# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestSpoj():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_spoj(self):
    # Test name: spoj
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://www.spoj.com/")
    # 2 | setWindowSize | 1936x1056 | 
    self.driver.set_window_size(1936, 1056)
    # 3 | mouseOver | linkText="Hide public problem tags" doesn't work properly | 
    element = self.driver.find_element(By.LINK_TEXT, "\"Hide public problem tags\" doesn\'t work properly")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 4 | mouseOver | linkText=TLE with Java code | 
    element = self.driver.find_element(By.LINK_TEXT, "TLE with Java code")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 5 | mouseOut | linkText=TLE with Java code | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 6 | click | linkText=PROBLEMS | 
    self.driver.find_element(By.LINK_TEXT, "PROBLEMS").click()
    # 7 | click | id=problems-tags-search | 
    self.driver.find_element(By.ID, "problems-tags-search").click()
    # 8 | type | id=problems-tags-search | array
    self.driver.find_element(By.ID, "problems-tags-search").send_keys("array")
    # 9 | click | linkText=#array (6) | 
    self.driver.find_element(By.LINK_TEXT, "#array (6)").click()
    # 10 | click | linkText=Count the Pairs | 
    self.driver.find_element(By.LINK_TEXT, "Count the Pairs").click()
    # 11 | click | linkText=STATUS | 
    self.driver.find_element(By.LINK_TEXT, "STATUS").click()
    # 12 | mouseOver | linkText=4 | 
    element = self.driver.find_element(By.LINK_TEXT, "4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 13 | runScript | window.scrollTo(0,1) | 
    self.driver.execute_script("window.scrollTo(0,1)")
    # 14 | runScript | window.scrollTo(0,100) | 
    self.driver.execute_script("window.scrollTo(0,100)")
    # 15 | click | linkText=2 | 
    self.driver.find_element(By.LINK_TEXT, "2").click()
    # 16 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 17 | click | linkText=RANKS | 
    self.driver.find_element(By.LINK_TEXT, "RANKS").click()
    # 18 | click | linkText=CONTESTS | 
    self.driver.find_element(By.LINK_TEXT, "CONTESTS").click()
    # 19 | click | css=.table:nth-child(3) tr:nth-child(1) > td:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, ".table:nth-child(3) tr:nth-child(1) > td:nth-child(2)").click()
  
