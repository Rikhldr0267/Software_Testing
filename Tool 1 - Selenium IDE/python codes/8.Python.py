# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPython():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_python(self):
    # Test name: python
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://www.python.org/")
    # 2 | setWindowSize | 1936x1056 | 
    self.driver.set_window_size(1936, 1056)
    # 3 | click | linkText=Docs | 
    self.driver.find_element(By.LINK_TEXT, "Docs").click()
    # 4 | click | linkText=Tutorial | 
    self.driver.find_element(By.LINK_TEXT, "Tutorial").click()
    # 5 | click | linkText=3.1.3. Lists | 
    self.driver.find_element(By.LINK_TEXT, "3.1.3. Lists").click()
    # 6 | runScript | window.scrollTo(0,8942) | 
    self.driver.execute_script("window.scrollTo(0,8942)")
    # 7 | click | css=dt:nth-child(1) .std | 
    self.driver.find_element(By.CSS_SELECTOR, "dt:nth-child(1) .std").click()
    # 8 | click | css=dd:nth-child(3) > p:nth-child(1) .std-ref | 
    self.driver.find_element(By.CSS_SELECTOR, "dd:nth-child(3) > p:nth-child(1) .std-ref").click()
    # 9 | click | linkText=Additional Methods on Float | 
    self.driver.find_element(By.LINK_TEXT, "Additional Methods on Float").click()
    # 10 | click | css=.related:nth-child(4) li:nth-child(6) > a | 
    self.driver.find_element(By.CSS_SELECTOR, ".related:nth-child(4) li:nth-child(6) > a").click()
    # 11 | click | linkText=Jobs | 
    self.driver.find_element(By.LINK_TEXT, "Jobs").click()
    # 12 | mouseOver | linkText=Submit | 
    element = self.driver.find_element(By.LINK_TEXT, "Submit")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 13 | mouseOut | linkText=Submit | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 14 | mouseOver | linkText=Integration | 
    element = self.driver.find_element(By.LINK_TEXT, "Integration")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 15 | click | linkText=Python Django E-Commerce Full Stack | 
    self.driver.find_element(By.LINK_TEXT, "Python Django E-Commerce Full Stack").click()
    # 16 | click | css=#community > a | 
    self.driver.find_element(By.CSS_SELECTOR, "#community > a").click()
  
