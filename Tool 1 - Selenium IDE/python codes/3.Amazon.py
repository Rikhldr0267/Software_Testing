# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAmazon():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_amazon(self):
    # Test name: amazon
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://www.amazon.in/")
    # 2 | setWindowSize | 1456x1040 | 
    self.driver.set_window_size(1456, 1040)
    # 3 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 4 | click | css=#CardInstancecSF_rFVmEZA1thxg5blm5w .\_cDEzb_missionQuadrant_1Y7U_:nth-child(2) .\_cDEzb_missionImage_bHVL4 | 
    self.driver.find_element(By.CSS_SELECTOR, "#CardInstancecSF_rFVmEZA1thxg5blm5w .\\_cDEzb_missionQuadrant_1Y7U_:nth-child(2) .\\_cDEzb_missionImage_bHVL4").click()
    # 5 | mouseOver | css=.a-section:nth-child(1) > .a-color-base .\_cDEzb_image_2keXX | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".a-section:nth-child(1) > .a-color-base .\\_cDEzb_image_2keXX")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 6 | click | css=.a-section:nth-child(1) > .a-color-base .\_cDEzb_image_2keXX | 
    self.driver.find_element(By.CSS_SELECTOR, ".a-section:nth-child(1) > .a-color-base .\\_cDEzb_image_2keXX").click()
    # 7 | mouseOver | id=add-to-cart-button | 
    element = self.driver.find_element(By.ID, "add-to-cart-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | click | id=add-to-cart-button | 
    self.driver.find_element(By.ID, "add-to-cart-button").click()
    # 9 | mouseOut | id=add-to-cart-button | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 10 | mouseOver | id=attach_accessory_dp_0-0 | 
    element = self.driver.find_element(By.ID, "attach_accessory_dp_0-0")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 11 | mouseOut | id=attach_accessory_dp_0-0 | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 12 | mouseOver | css=#attach-sidesheet-checkout-button .a-button-input | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#attach-sidesheet-checkout-button .a-button-input")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 13 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 14 | mouseOver | css=a | 
    element = self.driver.find_element(By.CSS_SELECTOR, "a")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 15 | mouseOut | css=a | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 16 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 17 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 18 | mouseOver | id=nav-link-accountList-nav-line-1 | 
    element = self.driver.find_element(By.ID, "nav-link-accountList-nav-line-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 19 | mouseOut | id=nav-link-accountList-nav-line-1 | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
  
